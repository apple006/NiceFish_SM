<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  	<display-name>NiceFish</display-name>
  	
  	<!-- 加载配置文件 -->
  	<context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>
    		classpath:config/spring-mybatis.xml
    	</param-value>
  	</context-param>
	<!-- 不拦截静态文件 -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/assets/*</url-pattern>
      	<url-pattern>*.gif</url-pattern>
      	<url-pattern>*.jpg</url-pattern>  
      	<url-pattern>*.png</url-pattern>  
      	<url-pattern>*.jpeg</url-pattern>  
      	<url-pattern>*.bmp</url-pattern>
      	<url-pattern>*.html</url-pattern>  
      	<url-pattern>*.js</url-pattern>
      	<url-pattern>*.svg</url-pattern>
      	<url-pattern>*.eot</url-pattern>
      	<url-pattern>*.ttf</url-pattern>
      	<url-pattern>*.woff2</url-pattern>
      	<url-pattern>*.woff</url-pattern>
      	<url-pattern>*.map</url-pattern>
      	<url-pattern>*.ico</url-pattern>
    </servlet-mapping>
    
    <!-- 字符集拦截器 -->
    <filter>
	    <description>字符集过滤器</description>
	    <filter-name>encodingFilter</filter-name>
	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	    <init-param>
	      <description>字符集编码</description>
	      <param-name>encoding</param-name>
	      <param-value>UTF-8</param-value>
	    </init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>encodingFilter</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>
  	
  	<listener>
    	<description>spring监听器</description>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  	</listener>
  	<listener>
    	<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  	</listener>
  	<!-- 初始化 DispatcherServlet时，该框架在 web应用程序WEB-INF目录中寻找一个名为[servlet-名称]-servlet.xml的文件，
			并在那里定义相关的Beans，重写在全局中定义的任何Beans -->
  	<servlet>
    	<servlet-name>spring-mvc</servlet-name>
    	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    	 <init-param>  
	      	<param-name>contextConfigLocation</param-name>  
          	<param-value>classpath:config/spring-mvc.xml</param-value>  
		</init-param>
    	<load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
    	<servlet-name>spring-mvc</servlet-name>
    	<!-- 所有的的请求，都会被DispatcherServlet处理 -->
    	<url-pattern>/</url-pattern>
  	</servlet-mapping>
  	
  	
  	<!-- <servlet>
    	<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>DruidStatView</servlet-name>
  		<url-pattern>/druid/*</url-pattern>
  	</servlet-mapping>
  	<error-page>
        <error-code>404</error-code>
        <location>/errorPage/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/errorPage/500.jsp</location>
    </error-page> -->
  	<welcome-file-list>
	    <welcome-file>index.htm</welcome-file>
	    <!-- <welcome-file>index.jsp</welcome-file> -->
	    <!-- <welcome-file>default.html</welcome-file>
	    <welcome-file>default.htm</welcome-file>
	    <welcome-file>default.jsp</welcome-file> -->
  	</welcome-file-list>
</web-app>