<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sl.nicefish.dao.PostMapper" >
  <resultMap id="BaseResultMap" type="com.sl.nicefish.pojo.Post" >
    <id column="PostId" property="postid" jdbcType="VARCHAR" />
    <result column="PostTitle" property="posttitle" jdbcType="VARCHAR" />
    <result column="IsOriginal" property="isoriginal" jdbcType="INTEGER" />
    <result column="ClassifyId" property="classifyid" jdbcType="VARCHAR" />
    <result column="ReadTimes" property="readtimes" jdbcType="INTEGER" />
    <result column="LikedTimes" property="likedtimes" jdbcType="INTEGER" />
    <result column="CollectTimes" property="collecttimes" jdbcType="INTEGER" />
    <result column="UserId" property="userid" jdbcType="VARCHAR" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="EnableComment" property="enablecomment" jdbcType="INTEGER" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="LastModifyTime" property="lastmodifytime" jdbcType="TIMESTAMP" />
    <result column="ModifyUserId" property="modifyuserid" jdbcType="VARCHAR" />
    <result column="NickName" property="nickname" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sl.nicefish.pojo.Post" extends="BaseResultMap" >
    <result column="PostContent" property="postcontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    PostId, PostTitle, IsOriginal, ClassifyId, ReadTimes, LikedTimes, CollectTimes, UserId, 
    UserName, EnableComment, Status, CreateTime, LastModifyTime, ModifyUserId, NickName
  </sql>
  <sql id="Blob_Column_List" >
    PostContent
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post
    where PostId = #{postid,jdbcType=VARCHAR}
  </select>
  <select id="getList" resultMap="ResultMapWithBLOBs">
  	select 
  	<include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from post
    where PostId = #{postid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sl.nicefish.pojo.Post" >
    insert into post (PostId, PostTitle, IsOriginal, 
      ClassifyId, ReadTimes, LikedTimes, 
      CollectTimes, UserId, UserName, 
      EnableComment, Status, CreateTime, 
      LastModifyTime, ModifyUserId, NickName, 
      PostContent)
    values (#{postid,jdbcType=VARCHAR}, #{posttitle,jdbcType=VARCHAR}, #{isoriginal,jdbcType=INTEGER}, 
      #{classifyid,jdbcType=VARCHAR}, #{readtimes,jdbcType=INTEGER}, #{likedtimes,jdbcType=INTEGER}, 
      #{collecttimes,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{enablecomment,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{lastmodifytime,jdbcType=TIMESTAMP}, #{modifyuserid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{postcontent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sl.nicefish.pojo.Post" >
    insert into post
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="postid != null" >
        PostId,
      </if>
      <if test="posttitle != null" >
        PostTitle,
      </if>
      <if test="isoriginal != null" >
        IsOriginal,
      </if>
      <if test="classifyid != null" >
        ClassifyId,
      </if>
      <if test="readtimes != null" >
        ReadTimes,
      </if>
      <if test="likedtimes != null" >
        LikedTimes,
      </if>
      <if test="collecttimes != null" >
        CollectTimes,
      </if>
      <if test="userid != null" >
        UserId,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="enablecomment != null" >
        EnableComment,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="lastmodifytime != null" >
        LastModifyTime,
      </if>
      <if test="modifyuserid != null" >
        ModifyUserId,
      </if>
      <if test="nickname != null" >
        NickName,
      </if>
      <if test="postcontent != null" >
        PostContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="postid != null" >
        #{postid,jdbcType=VARCHAR},
      </if>
      <if test="posttitle != null" >
        #{posttitle,jdbcType=VARCHAR},
      </if>
      <if test="isoriginal != null" >
        #{isoriginal,jdbcType=INTEGER},
      </if>
      <if test="classifyid != null" >
        #{classifyid,jdbcType=VARCHAR},
      </if>
      <if test="readtimes != null" >
        #{readtimes,jdbcType=INTEGER},
      </if>
      <if test="likedtimes != null" >
        #{likedtimes,jdbcType=INTEGER},
      </if>
      <if test="collecttimes != null" >
        #{collecttimes,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="enablecomment != null" >
        #{enablecomment,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifytime != null" >
        #{lastmodifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyuserid != null" >
        #{modifyuserid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="postcontent != null" >
        #{postcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sl.nicefish.pojo.Post" >
    update post
    <set >
      <if test="posttitle != null" >
        PostTitle = #{posttitle,jdbcType=VARCHAR},
      </if>
      <if test="isoriginal != null" >
        IsOriginal = #{isoriginal,jdbcType=INTEGER},
      </if>
      <if test="classifyid != null" >
        ClassifyId = #{classifyid,jdbcType=VARCHAR},
      </if>
      <if test="readtimes != null" >
        ReadTimes = #{readtimes,jdbcType=INTEGER},
      </if>
      <if test="likedtimes != null" >
        LikedTimes = #{likedtimes,jdbcType=INTEGER},
      </if>
      <if test="collecttimes != null" >
        CollectTimes = #{collecttimes,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        UserId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="enablecomment != null" >
        EnableComment = #{enablecomment,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifytime != null" >
        LastModifyTime = #{lastmodifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyuserid != null" >
        ModifyUserId = #{modifyuserid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        NickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="postcontent != null" >
        PostContent = #{postcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where PostId = #{postid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sl.nicefish.pojo.Post" >
    update post
    set PostTitle = #{posttitle,jdbcType=VARCHAR},
      IsOriginal = #{isoriginal,jdbcType=INTEGER},
      ClassifyId = #{classifyid,jdbcType=VARCHAR},
      ReadTimes = #{readtimes,jdbcType=INTEGER},
      LikedTimes = #{likedtimes,jdbcType=INTEGER},
      CollectTimes = #{collecttimes,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=VARCHAR},
      UserName = #{username,jdbcType=VARCHAR},
      EnableComment = #{enablecomment,jdbcType=INTEGER},
      Status = #{status,jdbcType=INTEGER},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      LastModifyTime = #{lastmodifytime,jdbcType=TIMESTAMP},
      ModifyUserId = #{modifyuserid,jdbcType=VARCHAR},
      NickName = #{nickname,jdbcType=VARCHAR},
      PostContent = #{postcontent,jdbcType=LONGVARCHAR}
    where PostId = #{postid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sl.nicefish.pojo.Post" >
    update post
    set PostTitle = #{posttitle,jdbcType=VARCHAR},
      IsOriginal = #{isoriginal,jdbcType=INTEGER},
      ClassifyId = #{classifyid,jdbcType=VARCHAR},
      ReadTimes = #{readtimes,jdbcType=INTEGER},
      LikedTimes = #{likedtimes,jdbcType=INTEGER},
      CollectTimes = #{collecttimes,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=VARCHAR},
      UserName = #{username,jdbcType=VARCHAR},
      EnableComment = #{enablecomment,jdbcType=INTEGER},
      Status = #{status,jdbcType=INTEGER},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      LastModifyTime = #{lastmodifytime,jdbcType=TIMESTAMP},
      ModifyUserId = #{modifyuserid,jdbcType=VARCHAR},
      NickName = #{nickname,jdbcType=VARCHAR}
    where PostId = #{postid,jdbcType=VARCHAR}
  </update>
</mapper>